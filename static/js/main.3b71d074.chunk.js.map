{"version":3,"sources":["components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.jsx","index.js"],"names":["CardProfile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","defaultProps","Statistics","title","map","id","label","percentage","prototype","PropTypes","string","shape","number","FriendListItem","isOnline","width","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b71d074.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport \"./Profile.css\";\r\n\r\nconst CardProfile = ({ name, tag, location, avatar, stats }) => {\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"description\">\r\n                <img\r\n                    src={avatar}\r\n                    alt=\"Аватар пользователя\"\r\n                    className=\"avatar\"\r\n                />\r\n                <p className=\"name\">{name}</p>\r\n                <p className=\"tag\">@{tag}</p>\r\n                <p className=\"location\">{location}</p>\r\n            </div>\r\n\r\n            <ul className=\"stats\">\r\n            <li className =\"stats-item\">\r\n                <span className=\"label\">Followers</span>\r\n                <span className=\"quantity\">{stats.followers}</span>\r\n            </li>\r\n            <li className =\"stats-item\">\r\n                <span className=\"label\">Views</span>\r\n                <span className=\"quantity\">{stats.views}</span>\r\n            </li>\r\n            <li className =\"stats-item\">\r\n                <span className=\"label\">Likes</span>\r\n                <span className=\"quantity\">{stats.likes}</span>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nCardProfile.defaultProps = {\r\n    avatar:\"https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg\",\r\n}\r\n\r\nCardProfile.propTypes = {\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.objectOf(PropTypes.number),\r\n}\r\n\r\nexport default CardProfile","import PropTypes from 'prop-types';\r\n\r\nimport \"./Statistics.css\"\r\n\r\nconst Statistics = ({stats, title}) => {\r\n    return (\r\n        <section className=\"statistics\">\r\n            {title && <h2 className=\"title\">{title}</h2>}\r\n            <ul className=\"stat-list\">\r\n                {stats.map(({ id, label, percentage }) => (\r\n                    <li key = {id} className=\"item\">\r\n                        <span className=\"label\">{label}</span>\r\n                        <span className=\"percentage\">{percentage}</span>\r\n                    </li>))\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nStatistics.prototype = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.shape({\r\n        id: PropTypes.string,\r\n        label: PropTypes.string,\r\n        percentage: PropTypes.number,\r\n  }),\r\n}\r\n\r\nexport default Statistics","import PropTypes from 'prop-types';\r\n\r\nimport \"./FriendListItem.css\"\r\n\r\nconst FriendListItem = ({avatar, name, isOnline}) => {\r\n    return <li className=\"friends-item\">\r\n        <span className={isOnline ? \"status-online\" : \"status-offline\"}></span>\r\n        <img className=\"friend-avatar\" src={avatar} alt={name} width=\"48\" />\r\n        <p className=\"friend-name\">{name}</p>\r\n    </li>\r\n}\r\n\r\nFriendListItem.defaultProps = {\r\n    avatar: \"https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg\",\r\n    isOnline: false,\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    isOnline: PropTypes.bool,\r\n}\r\n\r\nexport default FriendListItem","import PropTypes from 'prop-types';\r\n\r\nimport FriendListItem from './FriendListItem';\r\n\r\nimport \"./FriendList.css\"\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return <ul className=\"friend-list\">\r\n        {friends.map(({ avatar, name, isOnline, id }) => (\r\n            <FriendListItem\r\n                avatar={avatar}\r\n                name={name}\r\n                isOnline={isOnline}\r\n                key={id}/>\r\n        ))}\r\n    </ul>\r\n}\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        })\r\n  )\r\n}\r\n\r\nexport default FriendList","import PropTypes from 'prop-types';\r\n\r\nimport \"./TransactionHistory.css\"\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return <table className=\"transaction-history\">\r\n        <thead>\r\n            <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>\r\n                <th>Currency</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {items.map(({ id, type, amount, currency }) => (\r\n            <tr key ={id} className=\"transaction-row\">\r\n                <td>{type}</td>\r\n                <td>{amount}</td>\r\n                <td>{currency}</td>\r\n            </tr>\r\n            ))}\r\n        </tbody>\r\n    </table>\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            type: PropTypes.string,\r\n            amount: PropTypes.string,\r\n            currency: PropTypes.string,\r\n        }),\r\n    ),\r\n}\r\n\r\nexport default TransactionHistory","import Profile from './components/Profile/Profile';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\n\r\nimport user from './social-profile/user.json';\r\nimport statisticalData from './statistics/statistical-data.json';\r\nimport friends from './friend-list/friends.json';\r\nimport transactions from './transaction-history/transactions.json';\r\n\r\nimport \"./App.css\"\r\n\r\nfunction App() {\r\n    return <div className=\"container\">\r\n        <Profile\r\n            name={user.name}\r\n            tag={user.tag}\r\n            location={user.location}\r\n            avatar={user.avatar}\r\n            stats={user.stats}\r\n        />\r\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n        <Statistics stats={statisticalData} />\r\n        <FriendList friends={friends} />\r\n        <TransactionHistory items={transactions} />\r\n    </div>\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n//\n"],"sourceRoot":""}